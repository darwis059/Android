name: Build APK

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  instrumentation_tests:
    runs-on: ubuntu-latest
    name: End-to-End tests

    steps:
      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Build Started - DuckDuckGo 

      - name: Install apksigner
        run: sudo apt-get install -y apksigner

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - uses: actions/cache@v2
        with:
          path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Create folder
        if: always()
        run: mkdir apk

      # - name: Decode keys
      #   uses: davidSchuppa/base64Secret-toFile-action@v2
      #   with:
      #     secret: ${{ secrets.FAKE_RELEASE_PROPERTIES }}
      #     fileName: ddg_android_build.properties
      #     destination-path: $HOME/jenkins_static/com.duckduckgo.mobile.android/

      # - name: Decode key file
      #   uses: davidSchuppa/base64Secret-toFile-action@v2
      #   with:
      #     secret: ${{ secrets.FAKE_RELEASE_KEY }}
      #     fileName: android
      #     destination-path: $HOME/jenkins_static/com.duckduckgo.mobile.android/

      - name: Assemble release APK
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleInternalRelease

      - name: Move APK to new folder
        if: always()
        run: find . -name "*.apk"  -exec mv '{}' apk/release.apk \;

      - name: Sign Android APK
        run: |
          echo ${{ secrets.ANDROID_KEYSTORE }} | base64 -d > keystore.jks
            apksigner sign \
              --ks keystore.jks --ks-pass "pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
              --in "apk/release.apk" \
              --out "apk/ddg-signed.apk"

      - name: Upload APK x86_64
        uses: actions/upload-artifact@v2.3.1
        with:
          name: ddg-signed.apk
          path: apk/ddg-signed.apk
      
      - name: Telegram Notify
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Build Complete ddg Browser

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
          
      - run: rclone copy apk/ddg-signed.apk drop:darwis
          #document: apk/ddg-signed.apk

      # - name: ADS Preview Flows
      #   uses: mobile-dev-inc/action-maestro-cloud@v1.1.1
      #   with:
      #     api-key: ${{ secrets.MOBILE_DEV_API_KEY }}
      #     name: ${{ github.sha }}
      #     app-file: apk/release.apk
      #     workspace: .maestro/ads_preview_flows

      # - name: Create Asana task when workflow failed
      #   if: ${{ failure() }}
      #   uses: honeycombio/gha-create-asana-task@main
      #   with:
      #     asana-secret: ${{ secrets.GH_ASANA_SECRET }}
      #     asana-workspace-id: ${{ secrets.GH_ASANA_WORKSPACE_ID }}
      #     asana-project-id: ${{ secrets.GH_ASANA_AOR_PROJECT_ID }}
      #     asana-section-id: ${{ secrets.GH_ASANA_INCOMING_ID }}
      #     asana-task-name: GH Workflow Failure - ADS Preview test
      #     asana-task-description: The ADS Preview end to end workflow has failed. See https://github.com/duckduckgo/Android/actions/runs/${{ github.run_id }}